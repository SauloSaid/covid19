<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook source-build='2019.4.0 (20194.19.1010.1202)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <ISO8601PeriodTypes predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parâmetro 1' datatype='integer' name='[Parâmetro 1]' param-domain-type='range' role='measure' type='quantitative' value='47'>
        <calculation class='tableau' formula='47' />
        <range granularity='1' max='80' min='1' />
      </column>
    </datasource>
    <datasource caption='Dados tratados sobre COVID-19' inline='true' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dados tratados sobre COVID-19' name='textscan.1esr7e30luclxd16rbmcq11b6b52'>
            <connection class='textscan' directory='/Users/saulosaid/covid19' filename='Dados tratados sobre COVID-19.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1esr7e30luclxd16rbmcq11b6b52' name='Dados tratados sobre COVID-19.csv' table='[Dados tratados sobre COVID-19#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR' separator=';'>
            <column datatype='string' name='estado_provincia' ordinal='0' />
            <column datatype='string' name='pais_regiao' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='date' name='data' ordinal='4' />
            <column datatype='integer' name='casos' ordinal='5' />
            <column datatype='integer' name='mortes' ordinal='6' />
            <column datatype='integer' name='data_numero' ordinal='7' />
            <column datatype='integer' name='dias_desde_primeiro_caso_provincia' ordinal='8' />
            <column datatype='integer' name='dias_desde_primeiro_caso_pais' ordinal='9' />
            <column datatype='integer' name='dias_desde_primeiro_morte_provincia' ordinal='10' />
            <column datatype='integer' name='dias_desde_primeiro_morte_pais' ordinal='11' />
            <column datatype='integer' name='novas_mortes_provincia' ordinal='12' />
            <column datatype='integer' name='novos_casos_provincia' ordinal='13' />
            <column datatype='integer' name='n' ordinal='14' />
            <column datatype='date' name='ultima_atualizacao' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>estado_provincia</remote-name>
            <remote-type>129</remote-type>
            <local-name>[estado_provincia]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>estado_provincia</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pais_regiao</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pais_regiao]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>pais_regiao</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data</remote-name>
            <remote-type>133</remote-type>
            <local-name>[data]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>data</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>casos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[casos]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>casos</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mortes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mortes]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>mortes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_numero</remote-name>
            <remote-type>20</remote-type>
            <local-name>[data_numero]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>data_numero</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dias_desde_primeiro_caso_provincia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dias_desde_primeiro_caso_provincia]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>dias_desde_primeiro_caso_provincia</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dias_desde_primeiro_caso_pais</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dias_desde_primeiro_caso_pais]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>dias_desde_primeiro_caso_pais</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dias_desde_primeiro_morte_provincia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dias_desde_primeiro_morte_provincia]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>dias_desde_primeiro_morte_provincia</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dias_desde_primeiro_morte_pais</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dias_desde_primeiro_morte_pais]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>dias_desde_primeiro_morte_pais</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>novas_mortes_provincia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[novas_mortes_provincia]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>novas_mortes_provincia</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>novos_casos_provincia</remote-name>
            <remote-type>20</remote-type>
            <local-name>[novos_casos_provincia]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>novos_casos_provincia</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>n</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ultima_atualizacao</remote-name>
            <remote-type>133</remote-type>
            <local-name>[ultima_atualizacao]</local-name>
            <parent-name>[Dados tratados sobre COVID-19.csv]</parent-name>
            <remote-alias>ultima_atualizacao</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total de mortes' datatype='integer' name='[Calculation_3384666263605473284]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [pais_regiao]: SUM([novas_mortes_provincia])}' />
      </column>
      <column caption='WINDOW_AVG(SUM([Novos Casos Provincia]), -3, 0)' datatype='real' name='[Calculation_3384666263632982021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([novos_casos_provincia]), -3, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cálculo1' datatype='integer' name='[Calculation_3384666263639707655]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3384666263638110214]' />
      </column>
      <column caption='Variação mortes' datatype='integer' default-format='*▲ 0; ▼ -0' name='[Calculation_3384666263639756808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(&#10;IF [data] = { FIXED : MAX([data])} THEN&#10;[novas_mortes_provincia] END)&#10;-&#10;SUM(&#10;IF [data] = ({ FIXED : MAX([data])} -1)  THEN&#10;[novas_mortes_provincia] END)' />
      </column>
      <column caption='Data máxima' datatype='date' default-format='*dd/MMM' name='[Calculation_3384666263641866249]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MAX([data])' />
      </column>
      <column caption='DATA MÁXIMA -1 ' datatype='date' default-format='*DD/MMM' name='[Calculation_3384666263648104459]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Calculation_3384666263641866249]-1' />
      </column>
      <column caption='Mortes  última data' datatype='integer' name='[Calculation_3384666263650652173]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [data] = { FIXED : MAX([data])} THEN&#10;[novas_mortes_provincia] END' />
      </column>
      <column aggregation='Sum' caption='Cálculo2' datatype='integer' name='[Calculation_3384666263694688271]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF &#10;[dias_desde_primeiro_morte_pais] &lt;= [Parameters].[Parâmetro 1] &#10;THEN [dias_desde_primeiro_morte_pais]&#10; END' />
      </column>
      <column caption='WINDOW_AVG(AVG([Novas Mortes Provincia]), -3, 0)' datatype='real' name='[Calculation_3384666263761616934]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(AVG([novas_mortes_provincia]), -3, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CC Window SUm ' datatype='real' name='[Calculation_3384666263937720372]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Calculation_3384666263694688271])&lt;= 3  THEN  SUM([novas_mortes_provincia])&#10;ELSE&#10;WINDOW_AVG(SUM( [novas_mortes_provincia]),-3,0) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Brasil / Cor' datatype='boolean' name='[Calculation_3384666263995207736]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[pais_regiao] = &quot;Brazil&quot;' />
      </column>
      <column aggregation='None' caption='Pais 2' datatype='string' name='[Calculation_3384666263996760121]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[pais_regiao]' />
        <aliases>
          <alias key='&quot;Belgium&quot;' value='Bélgica' />
          <alias key='&quot;Brazil&quot;' value='Brasil' />
          <alias key='&quot;France&quot;' value='França' />
          <alias key='&quot;Germany&quot;' value='Alemanha' />
          <alias key='&quot;Iran&quot;' value='Irà' />
          <alias key='&quot;Italy&quot;' value='Itália' />
          <alias key='&quot;Netherlands&quot;' value='Holanda' />
          <alias key='&quot;Spain&quot;' value='Espanha' />
          <alias key='&quot;Sweden&quot;' value='Suécia' />
          <alias key='&quot;Switzerland&quot;' value='Suíca' />
          <alias key='&quot;Turkey&quot;' value='Turquia' />
          <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
          <alias key='&quot;US&quot;' value='EUA' />
        </aliases>
      </column>
      <column caption='Média móvel' datatype='real' name='[Calculation_66076288864522242]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  INDEX() &lt;= MAX([dias_desde_primeiro_morte_pais])&#10;THEN&#10;WINDOW_AVG(SUM([novas_mortes_provincia]),-2,0)&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cálculo4' datatype='integer' name='[Calculation_66076288865234948]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='3' />
      </column>
      <column caption='TESTE FIRST' datatype='integer' name='[Calculation_66076288975704086]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FIRST()*(-1)+1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CC Novas mortes include' datatype='integer' name='[Calculation_66076289047982104]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [pais_regiao], [data]: SUM([novas_mortes_provincia])}' />
      </column>
      <column caption='CC Novas casos include]' datatype='real' name='[Calculation_66076289048268825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_CORR( MIN([novas_mortes_provincia]), LOOKUP(MIN([novos_casos_provincia]),1) )'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Dias até 100 caso' datatype='date' name='[Calculation_66076289279074331]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN(&#10;IF { FIXED [pais_regiao], [data]: SUM([novos_casos_provincia])} &gt; 100&#10;THEN &#10;[data]&#10;END)' />
      </column>
      <column caption='Dias desde 100 casos' datatype='integer' name='[Calculation_66076289281003548]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ATTR( [data])  - [Calculation_66076289279074331]' />
      </column>
      <column caption='CC Índice' datatype='integer' name='[Cálculo3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:dias_desde_primeiro_morte_provincia:qk]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Dias Desde Primeiro Caso Provincia (cópia)' datatype='integer' name='[Dias Desde Primeiro Caso Provincia (cópia)_3384666263693905934]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[dias_desde_primeiro_caso_provincia]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Casos' datatype='integer' name='[casos]' role='measure' type='quantitative' />
      <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
      <column caption='Data Numero' datatype='integer' name='[data_numero]' role='measure' type='quantitative' />
      <column caption='Dias Desde Primeiro Caso Pais' datatype='integer' name='[dias_desde_primeiro_caso_pais]' role='measure' type='quantitative' />
      <column caption='Dias Desde Primeiro Caso Provincia' datatype='integer' name='[dias_desde_primeiro_caso_provincia]' role='measure' type='quantitative' />
      <column caption='Dias Desde Primeiro Morte Pais' datatype='integer' name='[dias_desde_primeiro_morte_pais]' role='measure' type='quantitative' />
      <column caption='Dias Desde Primeiro Morte Provincia' datatype='integer' name='[dias_desde_primeiro_morte_provincia]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Estado Provincia' datatype='string' name='[estado_provincia]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='CountD' datatype='integer' name='[lag5_novos_casos]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' name='[lag7_novos_casos]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mortes' datatype='integer' name='[mortes]' role='measure' type='quantitative' />
      <column caption='N' datatype='integer' name='[n]' role='measure' type='quantitative' />
      <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
      <column caption='Novos Casos Provincia' datatype='integer' name='[novos_casos_provincia]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;Belgium&quot;' value='Bélgica' />
          <alias key='&quot;Brazil&quot;' value='Brasil' />
          <alias key='&quot;France&quot;' value='França' />
          <alias key='&quot;Germany&quot;' value='Alemanha' />
          <alias key='&quot;Italy&quot;' value='Itália' />
          <alias key='&quot;Netherlands&quot;' value='Holanda' />
          <alias key='&quot;Spain&quot;' value='Espanha' />
          <alias key='&quot;Sweden&quot;' value='Suécia' />
          <alias key='&quot;Switzerland&quot;' value='Suíca' />
          <alias key='&quot;Turkey&quot;' value='Turquia' />
          <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
          <alias key='&quot;US&quot;' value='EUA' />
        </aliases>
      </column>
      <column caption='Ultima Atualizacao' datatype='date' name='[ultima_atualizacao]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_3384666263694688271]' derivation='None' name='[none:Calculation_3384666263694688271:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_3384666263995207736]' derivation='None' name='[none:Calculation_3384666263995207736:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_3384666263996760121]' derivation='None' name='[none:Calculation_3384666263996760121:nk]' pivot='key' type='nominal' />
      <column-instance column='[dias_desde_primeiro_morte_pais]' derivation='None' name='[none:dias_desde_primeiro_morte_pais:ok]' pivot='key' type='ordinal' />
      <column-instance column='[dias_desde_primeiro_morte_provincia]' derivation='None' name='[none:dias_desde_primeiro_morte_provincia:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pais_regiao]' derivation='None' name='[none:pais_regiao:nk]' pivot='key' type='nominal' />
      <group caption='Ação (Dias Desde Primeiro Morte Pais,Pais Regiao)' hidden='true' name='[Action (Dias Desde Primeiro Morte Pais,Pais Regiao)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:dias_desde_primeiro_morte_pais:ok]' />
          <groupfilter function='level-members' level='[pais_regiao]' />
        </groupfilter>
      </group>
      <group caption='Ação (Pais Regiao)' hidden='true' name='[Action (Pais Regiao)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[pais_regiao]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusões (Cálculo2,Pais Regiao)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_3384666263694688271:ok]' />
          <groupfilter function='level-members' level='[none:pais_regiao:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Pais Regiao, Estado Provincia'>
          <field>[pais_regiao]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.360748' measure-ordering='alphabetic' measure-percentage='0.596262' parameter-percentage='0.0429907' rowDisplayCount='30000' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pais_regiao:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3384666263996760121:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3384666263995207736:nk]' type='palette'>
            <map to='#b8163a'>
              <bucket>false</bucket>
            </map>
            <map to='#edc948'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parâmetro 1' datatype='integer' name='[Parâmetro 1]' param-domain-type='range' role='measure' type='quantitative' value='47'>
          <calculation class='tableau' formula='47' />
          <range granularity='1' max='80' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Destacar1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Dias desde primeiro caso' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Pais Regiao' />
        <param name='target' value='Dias desde primeiro caso' />
      </command>
    </action>
    <action caption='DESTACAR RANKING E EVOLUÇÃO' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 1' type='sheet'>
        <exclude-sheet name='KPI TOTAL DE MOTES' />
        <exclude-sheet name='KPI TOTAL DE MOTES (2)' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='KPI TOTAL DE MOTES,KPI TOTAL DE MOTES (2)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Painel 1' />
      </command>
    </action>
    <action caption='Destacar1 2' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Dias desde primeiro caso (3)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Pais Regiao' />
        <param name='target' value='Dias desde primeiro caso (3)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Dias desde primeiro caso'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
            <datasource caption='Parâmetros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parâmetro 1' datatype='integer' name='[Parâmetro 1]' param-domain-type='range' role='measure' type='quantitative' value='47'>
              <calculation class='tableau' formula='47' />
              <range granularity='1' max='80' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column aggregation='Sum' caption='Cálculo2' datatype='integer' name='[Calculation_3384666263694688271]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#10;[dias_desde_primeiro_morte_pais] &lt;= [Parameters].[Parâmetro 1] &#10;THEN [dias_desde_primeiro_morte_pais]&#10; END' />
            </column>
            <column caption='Brasil / Cor' datatype='boolean' name='[Calculation_3384666263995207736]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao] = &quot;Brazil&quot;' />
            </column>
            <column aggregation='None' caption='Pais 2' datatype='string' name='[Calculation_3384666263996760121]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao]' />
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Iran&quot;' value='Irà' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column caption='Média móvel' datatype='real' name='[Calculation_66076288864522242]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  INDEX() &lt;= MAX([dias_desde_primeiro_morte_pais])&#10;THEN&#10;WINDOW_AVG(SUM([novas_mortes_provincia]),-2,0)&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column caption='Dias Desde Primeiro Morte Pais' datatype='integer' name='[dias_desde_primeiro_morte_pais]' role='measure' type='quantitative' />
            <column-instance column='[data]' derivation='Min' name='[min:data:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3384666263694688271]' derivation='None' name='[none:Calculation_3384666263694688271:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3384666263995207736]' derivation='None' name='[none:Calculation_3384666263995207736:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3384666263996760121]' derivation='None' name='[none:Calculation_3384666263996760121:nk]' pivot='key' type='nominal' />
            <column-instance column='[pais_regiao]' derivation='None' name='[none:pais_regiao:nk]' pivot='key' type='nominal' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[novas_mortes_provincia]' derivation='Sum' name='[sum:novas_mortes_provincia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_66076288864522242]' derivation='User' name='[usr:Calculation_66076288864522242:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='1' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='2' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='3' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='4' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='5' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='6' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='7' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='8' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='9' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='10' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='11' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='12' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='13' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='14' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='15' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='16' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='17' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='18' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='19' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='20' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='21' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='22' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='23' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='24' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='25' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='26' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='27' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='28' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='29' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='30' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='31' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='32' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='33' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='34' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='35' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='36' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='37' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='38' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='39' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='40' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='41' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='42' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='43' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='44' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='45' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='46' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='47' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='48' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='49' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='50' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='51' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='52' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='53' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]' context='true'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' context='true' filter-group='3'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([novas_mortes_provincia])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:pais_regiao:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]</column>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]</column>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]' value='Filtre os países'>
              <formatted-text>
                <run>Filtre os países</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]' />
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' />
              <lod column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' />
              <tooltip column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[min:data:ok]' />
              <tooltip column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#991f23' />
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_66076288864522242:qk]</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]</cols>
      </table>
      <simple-id uuid='{17524AA2-4216-423A-9FE3-84531E352708}' />
    </worksheet>
    <worksheet name='Dias desde primeiro caso (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
            <datasource caption='Parâmetros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parâmetro 1' datatype='integer' name='[Parâmetro 1]' param-domain-type='range' role='measure' type='quantitative' value='47'>
              <calculation class='tableau' formula='47' />
              <range granularity='1' max='80' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column aggregation='Sum' caption='Cálculo2' datatype='integer' name='[Calculation_3384666263694688271]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF &#10;[dias_desde_primeiro_morte_pais] &lt;= [Parameters].[Parâmetro 1] &#10;THEN [dias_desde_primeiro_morte_pais]&#10; END' />
            </column>
            <column aggregation='None' caption='Pais 2' datatype='string' name='[Calculation_3384666263996760121]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao]' />
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Iran&quot;' value='Irà' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column caption='Média móvel' datatype='real' name='[Calculation_66076288864522242]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  INDEX() &lt;= MAX([dias_desde_primeiro_morte_pais])&#10;THEN&#10;WINDOW_AVG(SUM([novas_mortes_provincia]),-2,0)&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column caption='Dias Desde Primeiro Morte Pais' datatype='integer' name='[dias_desde_primeiro_morte_pais]' role='measure' type='quantitative' />
            <column-instance column='[data]' derivation='Min' name='[min:data:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3384666263694688271]' derivation='None' name='[none:Calculation_3384666263694688271:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3384666263996760121]' derivation='None' name='[none:Calculation_3384666263996760121:nk]' pivot='key' type='nominal' />
            <column-instance column='[pais_regiao]' derivation='None' name='[none:pais_regiao:nk]' pivot='key' type='nominal' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[Calculation_66076288864522242]' derivation='User' name='[usr:Calculation_66076288864522242:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='1' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='2' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='3' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='4' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='5' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='6' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='7' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='8' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='9' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='10' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='11' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='12' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='13' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='14' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='15' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='16' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='17' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='18' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='19' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='20' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='21' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='22' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='23' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='24' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='25' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='26' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='27' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='28' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='29' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='30' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='31' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='32' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='33' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='34' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='35' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='36' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='37' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='38' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='39' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='40' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='41' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='42' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='43' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='44' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='45' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='46' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='47' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='48' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='49' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='50' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='51' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='52' />
              <groupfilter function='member' level='[none:Calculation_3384666263694688271:ok]' member='53' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]' context='true'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Calculation_3384666263996760121:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]</column>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]' value='Filtre os países'>
              <formatted-text>
                <run>Filtre os países</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' />
              <lod column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' />
              <tooltip column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[min:data:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_66076288864522242:qk]</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]</cols>
      </table>
      <simple-id uuid='{BEDF4A3E-0D27-4E0A-B40D-1D1E403F3FF8}' />
    </worksheet>
    <worksheet name='KPI TOTAL DE MOTES'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Variação mortes' datatype='integer' default-format='*▲ 0; ▼ -0' name='[Calculation_3384666263639756808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(&#10;IF [data] = { FIXED : MAX([data])} THEN&#10;[novas_mortes_provincia] END)&#10;-&#10;SUM(&#10;IF [data] = ({ FIXED : MAX([data])} -1)  THEN&#10;[novas_mortes_provincia] END)' />
            </column>
            <column caption='Data máxima' datatype='date' default-format='*dd/MMM' name='[Calculation_3384666263641866249]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='MAX([data])' />
            </column>
            <column caption='DATA MÁXIMA -1 ' datatype='date' default-format='*DD/MMM' name='[Calculation_3384666263648104459]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Calculation_3384666263641866249]-1' />
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column-instance column='[novas_mortes_provincia]' derivation='Sum' name='[sum:novas_mortes_provincia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3384666263639756808]' derivation='User' name='[usr:Calculation_3384666263639756808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3384666263641866249]' derivation='User' name='[usr:Calculation_3384666263641866249:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3384666263648104459]' derivation='User' name='[usr:Calculation_3384666263648104459:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='141' />
            <format attr='text-format' field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk]' />
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_3384666263641866249:ok]' />
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_3384666263639756808:qk]' />
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_3384666263648104459:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#991f23' fontname='Tableau Bold' fontsize='28'>&lt;[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#333333' fontsize='10'>MORTES NA PANDEMIA</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B47CB8D5-168A-46F2-B08B-CF6F617A1557}' />
    </worksheet>
    <worksheet name='KPI TOTAL DE MOTES (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Data máxima' datatype='date' default-format='*dd/MMM' name='[Calculation_3384666263641866249]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='MAX([data])' />
            </column>
            <column caption='Mortes  última data' datatype='integer' name='[Calculation_3384666263650652173]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [data] = { FIXED : MAX([data])} THEN&#10;[novas_mortes_provincia] END' />
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3384666263650652173]' derivation='Sum' name='[sum:Calculation_3384666263650652173:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3384666263641866249]' derivation='User' name='[usr:Calculation_3384666263641866249:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='141' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_3384666263641866249:ok]' value='*DD/mmm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:Calculation_3384666263650652173:qk]' />
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_3384666263641866249:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#991f23' fontname='Tableau Bold' fontsize='28'>&lt;[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:Calculation_3384666263650652173:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#333333' fontname='Tableau Regular' fontsize='10'>MORTES NO DIA &lt;[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_3384666263641866249:ok]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FD9E946E-B4D3-4006-AA40-176DFE72822F}' />
    </worksheet>
    <worksheet name='País'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column-instance column='[pais_regiao]' derivation='None' name='[none:pais_regiao:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' />
              <geometry column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[Latitude (generated)]</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F6AE8912-FE8D-4738-B247-F15FEAA05384}' />
    </worksheet>
    <worksheet name='Países com mais mortes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>15 PAÍSES COM MAIS MORTES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column caption='Mortes' datatype='integer' name='[mortes]' role='measure' type='quantitative' />
            <column-instance column='[data]' derivation='None' name='[none:data:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pais_regiao]' derivation='None' name='[none:pais_regiao:nk]' pivot='key' type='nominal' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[mortes]' derivation='Sum' name='[sum:mortes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:data:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type='day' period-type-v2='day' />
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' context='true' filter-group='3'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([novas_mortes_provincia])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:pais_regiao:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:mortes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]</column>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:data:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
            <format attr='width' field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#991f23' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:mortes:qk]</cols>
      </table>
      <simple-id uuid='{B2F8D86A-BDBA-47ED-8D2B-0168FFF20568}' />
    </worksheet>
    <worksheet name='Planilha 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Brasil / Cor' datatype='boolean' name='[Calculation_3384666263995207736]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao] = &quot;Brazil&quot;' />
            </column>
            <column aggregation='None' caption='Pais 2' datatype='string' name='[Calculation_3384666263996760121]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao]' />
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Iran&quot;' value='Irà' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3384666263996760121]' derivation='Attribute' name='[attr:Calculation_3384666263996760121:nk]' pivot='key' type='nominal' />
            <column-instance column='[data]' derivation='Attribute' name='[attr:data:ok]' pivot='key' type='ordinal' />
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='integer' name='[lag7_novos_casos]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3384666263995207736]' derivation='None' name='[none:Calculation_3384666263995207736:nk]' pivot='key' type='nominal' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[lag7_novos_casos]' derivation='Sum' name='[sum:lag7_novos_casos:qk]' pivot='key' type='quantitative' />
            <column-instance column='[novas_mortes_provincia]' derivation='Sum' name='[sum:novas_mortes_provincia:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]'>
            <groupfilter function='member' level='[none:Calculation_3384666263995207736:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <path column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[attr:data:ok]' />
              <text column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[attr:data:ok]' />
              <tooltip column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[attr:Calculation_3384666263996760121:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk]</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:lag7_novos_casos:qk]</cols>
      </table>
      <simple-id uuid='{7A847104-1E3F-4048-9A85-91AD6061BB8C}' />
    </worksheet>
    <worksheet name='Planilha 10 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column datatype='integer' name='[lag2_novos_casos]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' name='[lag5_novos_casos]' role='measure' type='quantitative' />
            <column caption='Novos Casos Provincia' datatype='integer' name='[novos_casos_provincia]' role='measure' type='quantitative' />
            <column-instance column='[lag2_novos_casos]' derivation='Sum' name='[sum:lag2_novos_casos:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lag5_novos_casos]' derivation='Sum' name='[sum:lag5_novos_casos:qk]' pivot='key' type='quantitative' />
            <column-instance column='[novos_casos_provincia]' derivation='Sum' name='[sum:novos_casos_provincia:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:lag5_novos_casos:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:lag2_novos_casos:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novos_casos_provincia:qk]</rows>
        <cols>([federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:lag5_novos_casos:qk] + [federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:lag2_novos_casos:qk])</cols>
      </table>
      <simple-id uuid='{A6454000-0F71-4EFA-9E9A-62B56463CB53}' />
    </worksheet>
    <worksheet name='Planilha 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Brasil / Cor' datatype='boolean' name='[Calculation_3384666263995207736]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao] = &quot;Brazil&quot;' />
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='integer' name='[lag7_novos_casos]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3384666263995207736]' derivation='None' name='[none:Calculation_3384666263995207736:nk]' pivot='key' type='nominal' />
            <column-instance column='[data]' derivation='None' name='[none:data:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[lag7_novos_casos]' derivation='Sum' name='[sum:lag7_novos_casos:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]'>
            <groupfilter function='member' level='[none:Calculation_3384666263995207736:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:lag7_novos_casos:qk]</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:data:qk]</cols>
      </table>
      <simple-id uuid='{40F10B63-3546-40E2-B531-7606DBC36F44}' />
    </worksheet>
    <worksheet name='Planilha 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Brasil / Cor' datatype='boolean' name='[Calculation_3384666263995207736]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao] = &quot;Brazil&quot;' />
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3384666263995207736]' derivation='None' name='[none:Calculation_3384666263995207736:nk]' pivot='key' type='nominal' />
            <column caption='Novos Casos Provincia' datatype='integer' name='[novos_casos_provincia]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[novos_casos_provincia]' derivation='Sum' name='[pcdf:sum:novos_casos_provincia:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[novos_casos_provincia]' derivation='Sum' name='[sum:novos_casos_provincia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[data]' derivation='Week-Trunc' name='[twk:data:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]'>
            <groupfilter function='member' level='[none:Calculation_3384666263995207736:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novos_casos_provincia:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[pcdf:sum:novos_casos_provincia:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novos_casos_provincia:qk] + [federated.0krgjsj1687ivz1azj9g61sgr6uw].[pcdf:sum:novos_casos_provincia:qk])</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[twk:data:qk]</cols>
      </table>
      <simple-id uuid='{F64A330E-B5C9-4182-8E30-C8D7AE5EDCF1}' />
    </worksheet>
    <worksheet name='Planilha 13 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
          </datasources>
          <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
            <column caption='Brasil / Cor' datatype='boolean' name='[Calculation_3384666263995207736]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[pais_regiao] = &quot;Brazil&quot;' />
            </column>
            <column caption='(ZN(SUM([Novas Mortes Provincia])) - LOOKUP(ZN(SUM([Novas Mor...' datatype='real' name='[Calculation_66076289070903322]' role='measure' type='quantitative' user:unnamed='Planilha 13 (2)'>
              <calculation class='tableau' formula='(ZN(SUM([novas_mortes_provincia])) - LOOKUP(ZN(SUM([novas_mortes_provincia])), -1)) / ABS(LOOKUP(ZN(SUM([novas_mortes_provincia])), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Data' datatype='date' name='[data]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3384666263995207736]' derivation='None' name='[none:Calculation_3384666263995207736:nk]' pivot='key' type='nominal' />
            <column-instance column='[data]' derivation='None' name='[none:data:qk]' pivot='key' type='quantitative' />
            <column caption='Novas Mortes Provincia' datatype='integer' name='[novas_mortes_provincia]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Pais Regiao' datatype='string' name='[pais_regiao]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Belgium&quot;' value='Bélgica' />
                <alias key='&quot;Brazil&quot;' value='Brasil' />
                <alias key='&quot;France&quot;' value='França' />
                <alias key='&quot;Germany&quot;' value='Alemanha' />
                <alias key='&quot;Italy&quot;' value='Itália' />
                <alias key='&quot;Netherlands&quot;' value='Holanda' />
                <alias key='&quot;Spain&quot;' value='Espanha' />
                <alias key='&quot;Sweden&quot;' value='Suécia' />
                <alias key='&quot;Switzerland&quot;' value='Suíca' />
                <alias key='&quot;Turkey&quot;' value='Turquia' />
                <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
                <alias key='&quot;US&quot;' value='EUA' />
              </aliases>
            </column>
            <column-instance column='[novas_mortes_provincia]' derivation='Sum' name='[sum:novas_mortes_provincia:qk]' pivot='key' type='quantitative' />
            <column-instance column='[data]' derivation='Week-Trunc' name='[twk:data:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_66076289070903322]' derivation='User' name='[usr:Calculation_66076289070903322:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:data:qk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]'>
            <groupfilter function='member' level='[none:Calculation_3384666263995207736:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_66076289070903322:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0krgjsj1687ivz1azj9g61sgr6uw].[sum:novas_mortes_provincia:qk] + [federated.0krgjsj1687ivz1azj9g61sgr6uw].[usr:Calculation_66076289070903322:qk:1])</rows>
        <cols>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[twk:data:qk]</cols>
      </table>
      <simple-id uuid='{F76CBAD8-B0CE-4C61-8626-DA18215E57B2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Painel 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Semibold' fontsize='28'>MORTES NA PANDEMIA COVID 19</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='737' maxwidth='1229' minheight='737' minwidth='1229' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Parâmetros' name='Parameters' />
        <datasource caption='Dados tratados sobre COVID-19' name='federated.0krgjsj1687ivz1azj9g61sgr6uw' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parâmetro 1' datatype='integer' name='[Parâmetro 1]' param-domain-type='range' role='measure' type='quantitative' value='47'>
          <calculation class='tableau' formula='47' />
          <range granularity='1' max='80' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0krgjsj1687ivz1azj9g61sgr6uw'>
        <column aggregation='None' caption='Pais 2' datatype='string' name='[Calculation_3384666263996760121]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='[pais_regiao]' />
          <aliases>
            <alias key='&quot;Belgium&quot;' value='Bélgica' />
            <alias key='&quot;Brazil&quot;' value='Brasil' />
            <alias key='&quot;France&quot;' value='França' />
            <alias key='&quot;Germany&quot;' value='Alemanha' />
            <alias key='&quot;Iran&quot;' value='Irà' />
            <alias key='&quot;Italy&quot;' value='Itália' />
            <alias key='&quot;Netherlands&quot;' value='Holanda' />
            <alias key='&quot;Spain&quot;' value='Espanha' />
            <alias key='&quot;Sweden&quot;' value='Suécia' />
            <alias key='&quot;Switzerland&quot;' value='Suíca' />
            <alias key='&quot;Turkey&quot;' value='Turquia' />
            <alias key='&quot;United Kingdom&quot;' value='Reino Unido' />
            <alias key='&quot;US&quot;' value='EUA' />
          </aliases>
        </column>
        <column-instance column='[Calculation_3384666263996760121]' derivation='None' name='[none:Calculation_3384666263996760121:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
          <zone fixed-size='52' h='7056' id='30' is-fixed='true' type='layout-basic' w='96772' x='1614' y='2357'>
            <zone h='7056' id='13' param='horz' type='layout-flow' w='9533' x='1614' y='2357'>
              <zone fixed-size='28' h='7056' id='14' is-fixed='true' type='empty' w='2929' x='1614' y='2357'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='93' h='7056' id='28' is-fixed='true' type='empty' w='6604' x='4543' y='2357'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='7056' id='31' param='horz' type='layout-flow' w='87239' x='11147' y='2357'>
              <zone h='7056' id='12' type='title' w='87239' x='11147' y='2357'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='7' h='2035' id='41' is-fixed='true' type='empty' w='96772' x='1614' y='9413'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='84' h='11398' id='20' is-fixed='true' type='layout-basic' w='96772' x='1614' y='11448'>
            <zone h='11398' id='38' type='layout-basic' w='96772' x='1614' y='11448'>
              <zone h='11398' id='21' param='horz' type='layout-flow' w='9533' x='1614' y='11448'>
                <zone fixed-size='210' h='11398' id='29' is-fixed='true' type='empty' w='9533' x='1614' y='11448'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='11398' id='39' param='horz' type='layout-flow' w='87239' x='11147' y='11448'>
                <zone fixed-size='242' h='11398' id='18' is-fixed='true' name='KPI TOTAL DE MOTES' show-title='false' w='20342' x='11147' y='11448'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='11398' id='19' is-fixed='true' name='KPI TOTAL DE MOTES (2)' show-title='false' w='20342' x='31489' y='11448'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='7' h='2035' id='42' is-fixed='true' type='empty' w='96772' x='1614' y='22846'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='72762' id='25' param='horz' type='layout-flow' w='96772' x='1614' y='24881'>
            <zone fixed-size='104' h='72762' id='37' is-fixed='true' param='horz' type='layout-flow' w='8462' x='1614' y='24881' />
            <zone fixed-size='384' h='72762' id='26' is-fixed='true' name='Países com mais mortes' w='31896' x='10076' y='24881'>
              <layout-cache cell-count-h='15' minwidth='204' non-cell-size-h='119' type-h='cell' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='72762' id='33' param='vert' type='layout-flow' w='56412' x='41972' y='24881'>
              <zone h='10176' id='36' param='horz' type='layout-flow' w='56250' x='42053' y='25017'>
                <zone h='10176' id='40' mode='checkdropdown' name='Dias desde primeiro caso' param='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]' type='filter' values='relevant' w='13670' x='42053' y='25017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='261' h='10176' id='34' is-fixed='true' mode='slider' param='[Parameters].[Parâmetro 1]' type='paramctrl' w='21888' x='55723' y='25017'>
                  <formatted-text>
                    <run>Escolha o total de dias desde a primeira morte</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='5020' id='43' type='text' w='56250' x='42053' y='35193'>
                <formatted-text>
                  <run bold='true' fontsize='16'>Total de mortes</run>
                  <run fontsize='16'> versus </run>
                  <run bold='true' fontsize='16'>dias desde a primeira morte</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52274' id='27' name='Dias desde primeiro caso' show-title='false' w='56250' x='42053' y='40213'>
                <layout-cache cell-count-w='47' minheight='141' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='29' forceUpdate='true' h='5020' id='44' is-fixed='true' type='text' w='56250' x='42053' y='92487'>
                <formatted-text>
                  <run bold='true' fontalignment='1'>Dias desde a primeira morte</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#b4b4b4' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='10' />
          </zone-style>
        </zone>
        <zone fixed-size='214' h='31886' id='15' is-centered='0' is-fixed='true' param='/Users/saulosaid/covid19/corona virus.jpeg' type='bitmap' w='7893' x='1383' y='3664' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontname='Tableau Semibold' fontsize='28'>MORTES NA PANDEMIA COVID 19</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97830' id='45' param='vert' type='layout-flow' w='98698' x='651' y='1085'>
                <zone h='7056' id='12' type='title' w='87239' x='11147' y='2357'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='235' h='31886' id='15' is-centered='0' is-fixed='true' param='/Users/saulosaid/covid19/corona virus.jpeg' type='bitmap' w='7893' x='1383' y='3664'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='76' h='11398' id='18' is-fixed='true' name='KPI TOTAL DE MOTES' show-title='false' w='20342' x='11147' y='11448'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='76' h='11398' id='19' is-fixed='true' name='KPI TOTAL DE MOTES (2)' show-title='false' w='20342' x='31489' y='11448'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72762' id='26' is-fixed='true' name='Países com mais mortes' w='31896' x='10076' y='24881'>
                  <layout-cache cell-count-h='15' minwidth='204' non-cell-size-h='119' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='261' h='10176' id='34' mode='slider' param='[Parameters].[Parâmetro 1]' type='paramctrl' w='21888' x='55723' y='25017'>
                  <formatted-text>
                    <run>Escolha o total de dias desde a primeira morte</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5020' id='43' type='text' w='56250' x='42053' y='35193'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>Total de mortes</run>
                    <run fontsize='16'> versus </run>
                    <run bold='true' fontsize='16'>dias desde a primeira morte</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10176' id='40' mode='checkdropdown' name='Dias desde primeiro caso' param='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]' type='filter' values='relevant' w='13670' x='42053' y='25017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52274' id='27' is-fixed='true' name='Dias desde primeiro caso' show-title='false' w='56250' x='42053' y='40213'>
                  <layout-cache cell-count-w='47' minheight='141' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='29' forceUpdate='true' h='5020' id='44' type='text' w='56250' x='42053' y='92487'>
                  <formatted-text>
                    <run bold='true' fontalignment='1'>Dias desde a primeira morte</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9D7D8DF4-852E-47D0-8B4A-1554503FA035}' />
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' maximized='true' name='Dias desde primeiro caso'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='slider' param='[Parameters].[Parâmetro 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[min:data:ok]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{888D468D-6E6E-4D8F-BEAF-10EC25E4D054}' />
    </window>
    <window class='worksheet' name='Dias desde primeiro caso (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='slider' param='[Parameters].[Parâmetro 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[min:data:ok]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263694688271:ok]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E35CD62-EDC0-4943-AEED-72DF6C9EF46B}' />
    </window>
    <window class='worksheet' name='Países com mais mortes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:data:qk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:pais_regiao:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{760FB4CE-4A64-4117-85FE-991D9004BB42}' />
    </window>
    <window class='worksheet' name='País'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3FB66F70-E8B3-4F4E-9DA0-2283BADF7F4A}' />
    </window>
    <window class='worksheet' name='KPI TOTAL DE MOTES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{E0145B95-228F-410A-8296-AF200E5ECEA9}' />
    </window>
    <window class='worksheet' name='KPI TOTAL DE MOTES (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{157CE0EB-309C-4C9F-89F9-3A303350676F}' />
    </window>
    <window class='dashboard' name='Painel 1'>
      <viewpoints>
        <viewpoint name='Dias desde primeiro caso'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='KPI TOTAL DE MOTES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI TOTAL DE MOTES (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Países com mais mortes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='26' />
      <simple-id uuid='{ADAD210F-CFEC-49B4-A0FC-29AF2F4AECB5}' />
    </window>
    <window class='worksheet' name='Planilha 10'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[:Measure Names]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[attr:data:ok]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FA466061-3748-431B-81DE-78D38084D7C9}' />
    </window>
    <window class='worksheet' name='Planilha 10 (2)'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[:Measure Names]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[attr:data:ok]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263996760121:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1C4F3A91-C211-421A-98A4-3F4E84C5E3ED}' />
    </window>
    <window class='worksheet' name='Planilha 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E25B6E37-97FA-450B-9EAE-E2F09AD6D569}' />
    </window>
    <window class='worksheet' name='Planilha 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{539B60D3-F733-4444-8232-2BE4099EC315}' />
    </window>
    <window class='worksheet' name='Planilha 13 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[none:Calculation_3384666263995207736:nk]</field>
            <field>[federated.0krgjsj1687ivz1azj9g61sgr6uw].[yr:data:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B786BA2-0D5D-4422-8BCD-3C3B3AAFA108}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dias desde primeiro caso' width='192'>
      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
      YiVtdEUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dias desde primeiro caso (3)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Painel 1' width='192'>
      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
      cZszAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Países com mais mortes' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Planilha 10' width='192'>
      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
      /wdvcpMI74udNAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Planilha 10 (2)' width='192'>
      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
      jub/B2gX6fofy/B9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Planilha 11' width='192'>
      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
      NJIMpZMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Planilha 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Planilha 13 (2)' width='192'>
      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
      da2/5QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
